package GUI;
import Logic.Appointment;
import Logic.Child;
import Logic.LogicSystem;
import Logic.Vaccine;
import java.awt.Color;
import java.awt.image.BufferedImage;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.SwingConstants;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.XYPlot;
import org.jfree.data.xy.XYDataset;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;

public class vPrincipal extends javax.swing.JFrame {
    LogicSystem sistema;
    LocalDate fechaNacimiento = null;
    LocalDate fechaCrecimiento = null;
    LocalDate fechaConsulta = null;
    Child selectedChild = null;
    ArrayList<Appointment> consultasAnteriores = new ArrayList <Appointment>();
    ArrayList<Appointment> consultasProximas = new ArrayList <Appointment>();
    
    public vPrincipal(LogicSystem s) {
        sistema = s;
        initComponents(); 
        checkBoxRealizadaProximasConsultas.setHorizontalTextPosition(SwingConstants.LEFT);
        checkBoxRealizadaConsultasAnteriores.setHorizontalTextPosition(SwingConstants.LEFT);
        checkBoxVacunaObligatoria.setHorizontalTextPosition(SwingConstants.LEFT);
        
        //Cargo los datos de los hijos en el ComboBox y muestro la fecha correspondiente
        comboBoxHijos.setModel(new DefaultComboBoxModel(sistema.getListAllChildren().toArray()));
        this.cargarHijoDelComboBox();
        
        //Notificaciones
        
        //Setteo los carteles de error para que no sean visibles
        textErrorNombreAgregarHijo.setVisible(false);
        textErrorFechaNacimientoAgregarHijo.setVisible(false); 
        textErrorFechaAgregarCrecimiento.setVisible(false);
        jLabelErrAlt.setVisible(false);
        jLabelErrPeso.setVisible(false);
        jLabelErrPermie.setVisible(false);     
        textErrorFechaAgregarConsulta.setVisible(false);
        textErrorNoChild.setVisible(false);
        
        updateChart();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabbedPane = new javax.swing.JTabbedPane();
        tabHijosYVacunas = new javax.swing.JPanel();
        panelVacunas = new javax.swing.JPanel();
        tituloVacunaDada = new javax.swing.JLabel();
        textVacunaFechaExpira = new javax.swing.JTextField();
        checkBoxVacunaObligatoria = new javax.swing.JCheckBox();
        tituloVacunas = new javax.swing.JLabel();
        textVacunaFechaDada = new javax.swing.JTextField();
        tituloVacunaExpira = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaVacunas = new javax.swing.JList();
        tituloCargarVacunas = new javax.swing.JLabel();
        buttonCargarVacunas = new javax.swing.JButton();
        comboBoxVacunaDada = new javax.swing.JComboBox();
        buttonAceptarAgregarVacuna = new javax.swing.JButton();
        tituloAgregarVacunaDada = new javax.swing.JLabel();
        buttonCancelarAgregarVacuna = new javax.swing.JButton();
        tituloFechaVacunaDada = new javax.swing.JLabel();
        datePickerAgregarVacunaFecha = new org.jdesktop.swingx.JXDatePicker();
        tituloAgregarVacuna = new javax.swing.JLabel();
        panelHijos = new javax.swing.JPanel();
        labelFechaNacimientoAgregarHijo = new javax.swing.JLabel();
        labelNombreAgregarHijo = new javax.swing.JLabel();
        tituloHijosRegistrados = new javax.swing.JLabel();
        textErrorNombreAgregarHijo = new javax.swing.JLabel();
        labelNombre = new javax.swing.JLabel();
        buttonCancelarAgregarHijo = new javax.swing.JButton();
        tituloAgregarHijo = new javax.swing.JLabel();
        textFechaNacimiento = new javax.swing.JTextField();
        textErrorFechaNacimientoAgregarHijo = new javax.swing.JLabel();
        labelFechaNacimiento = new javax.swing.JLabel();
        buttonAceptarAgregarHijo = new javax.swing.JButton();
        comboBoxHijos = new javax.swing.JComboBox();
        datePickerFechaNacimientoAgregarHijo = new org.jdesktop.swingx.JXDatePicker();
        textNombreAgregarHijo = new javax.swing.JTextField();
        tabAgenda = new javax.swing.JPanel();
        tituloProximasConsultas = new javax.swing.JLabel();
        labelFechaProximasConsultas = new javax.swing.JLabel();
        paneFechaProximasConsultas = new javax.swing.JScrollPane();
        listaFechaProximasConsultas = new javax.swing.JList();
        paneAgregarNota = new javax.swing.JScrollPane();
        textAgregarNota = new javax.swing.JTextArea();
        labelNotaProximasConsultas = new javax.swing.JLabel();
        checkBoxRealizadaProximasConsultas = new javax.swing.JCheckBox();
        paneNotaConsultasAnteriores = new javax.swing.JScrollPane();
        textNotaConsultasAnteriores = new javax.swing.JTextArea();
        labelNotaConsultasAnteriores = new javax.swing.JLabel();
        checkBoxRealizadaConsultasAnteriores = new javax.swing.JCheckBox();
        tituloConsultasAnteriores = new javax.swing.JLabel();
        labelFechaConsultasAnteriores = new javax.swing.JLabel();
        paneFechaConsultasAnteriores = new javax.swing.JScrollPane();
        listaFechaConsultasAnteriores = new javax.swing.JList();
        tituloAgregarConsulta = new javax.swing.JLabel();
        labelFechaAgregarConsulta = new javax.swing.JLabel();
        labelNotaAgregarConsulta = new javax.swing.JLabel();
        datePickerAgregarConsulta = new org.jdesktop.swingx.JXDatePicker();
        paneNotaProximasConsultas = new javax.swing.JScrollPane();
        notaProximasConsultas = new javax.swing.JTextArea();
        checkBoxRevisadoAgregarConsulta = new javax.swing.JCheckBox();
        buttonCancelarAgregarConsulta = new javax.swing.JButton();
        buttonAceptarAgregarConsulta = new javax.swing.JButton();
        textErrorFechaAgregarConsulta = new javax.swing.JLabel();
        textErrorNoChild = new javax.swing.JLabel();
        tabCrecimiento = new javax.swing.JPanel();
        jTextFieldPeso = new javax.swing.JTextField();
        textErrorFechaAgregarCrecimiento = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jButtonCanelarRegistroCrecimiento = new javax.swing.JButton();
        jLabelTit = new javax.swing.JLabel();
        jLabelErrAlt = new javax.swing.JLabel();
        labelFechaAgregarCrecimiento = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldPerimetro = new javax.swing.JTextField();
        datePickerAgregarCrecimiento = new org.jdesktop.swingx.JXDatePicker();
        jButtonAceptIngresoDeCrecimiento = new javax.swing.JButton();
        jTextFieldAltura = new javax.swing.JTextField();
        jLabelErrPermie = new javax.swing.JLabel();
        jLabelErrPeso = new javax.swing.JLabel();
        graficaPerimetro = new javax.swing.JLabel();
        graficaPeso = new javax.swing.JLabel();
        graficaEstatura = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Ficha Medica");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        tabbedPane.setBackground(new java.awt.Color(0, 51, 102));
        tabbedPane.setForeground(new java.awt.Color(255, 255, 255));
        tabbedPane.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N

        tabHijosYVacunas.setBackground(new java.awt.Color(204, 204, 204));

        panelVacunas.setBackground(new java.awt.Color(0, 153, 51));
        panelVacunas.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tituloVacunaDada.setBackground(new java.awt.Color(0, 153, 51));
        tituloVacunaDada.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        tituloVacunaDada.setForeground(new java.awt.Color(255, 255, 255));
        tituloVacunaDada.setText("Dada:");

        textVacunaFechaExpira.setEditable(false);
        textVacunaFechaExpira.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N

        checkBoxVacunaObligatoria.setBackground(new java.awt.Color(0, 153, 51));
        checkBoxVacunaObligatoria.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        checkBoxVacunaObligatoria.setForeground(new java.awt.Color(255, 255, 255));
        checkBoxVacunaObligatoria.setText("Obligatoria");
        checkBoxVacunaObligatoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBoxVacunaObligatoriaActionPerformed(evt);
            }
        });

        tituloVacunas.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        tituloVacunas.setForeground(new java.awt.Color(255, 255, 255));
        tituloVacunas.setText("VACUNAS");

        textVacunaFechaDada.setEditable(false);
        textVacunaFechaDada.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N

        tituloVacunaExpira.setBackground(new java.awt.Color(0, 153, 51));
        tituloVacunaExpira.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        tituloVacunaExpira.setForeground(new java.awt.Color(255, 255, 255));
        tituloVacunaExpira.setText("Expira:");

        listaVacunas.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        listaVacunas.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        listaVacunas.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listaVacunasValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(listaVacunas);

        tituloCargarVacunas.setBackground(new java.awt.Color(0, 153, 51));
        tituloCargarVacunas.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        tituloCargarVacunas.setForeground(new java.awt.Color(255, 255, 255));
        tituloCargarVacunas.setText("Cargar Archivo de Vacunas:");

        buttonCargarVacunas.setBackground(new java.awt.Color(0, 153, 51));
        buttonCargarVacunas.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        buttonCargarVacunas.setForeground(new java.awt.Color(255, 255, 255));
        buttonCargarVacunas.setText("Examinar");
        buttonCargarVacunas.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        buttonCargarVacunas.setMaximumSize(new java.awt.Dimension(71, 23));
        buttonCargarVacunas.setMinimumSize(new java.awt.Dimension(71, 23));
        buttonCargarVacunas.setPreferredSize(new java.awt.Dimension(71, 23));
        buttonCargarVacunas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCargarVacunasActionPerformed(evt);
            }
        });

        comboBoxVacunaDada.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        comboBoxVacunaDada.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        buttonAceptarAgregarVacuna.setBackground(new java.awt.Color(0, 153, 51));
        buttonAceptarAgregarVacuna.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        buttonAceptarAgregarVacuna.setForeground(new java.awt.Color(255, 255, 255));
        buttonAceptarAgregarVacuna.setText("Aceptar");
        buttonAceptarAgregarVacuna.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        buttonAceptarAgregarVacuna.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAceptarAgregarVacunaActionPerformed(evt);
            }
        });

        tituloAgregarVacunaDada.setBackground(new java.awt.Color(0, 153, 51));
        tituloAgregarVacunaDada.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        tituloAgregarVacunaDada.setForeground(new java.awt.Color(255, 255, 255));
        tituloAgregarVacunaDada.setText("AGREGAR VACUNA DADA");

        buttonCancelarAgregarVacuna.setBackground(new java.awt.Color(0, 153, 51));
        buttonCancelarAgregarVacuna.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        buttonCancelarAgregarVacuna.setForeground(new java.awt.Color(255, 255, 255));
        buttonCancelarAgregarVacuna.setText("Cancelar");
        buttonCancelarAgregarVacuna.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        buttonCancelarAgregarVacuna.setMaximumSize(new java.awt.Dimension(71, 23));
        buttonCancelarAgregarVacuna.setMinimumSize(new java.awt.Dimension(71, 23));
        buttonCancelarAgregarVacuna.setPreferredSize(new java.awt.Dimension(71, 23));
        buttonCancelarAgregarVacuna.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelarAgregarVacunaActionPerformed(evt);
            }
        });

        tituloFechaVacunaDada.setBackground(new java.awt.Color(0, 153, 51));
        tituloFechaVacunaDada.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        tituloFechaVacunaDada.setForeground(new java.awt.Color(255, 255, 255));
        tituloFechaVacunaDada.setText("Fecha Dada:");

        datePickerAgregarVacunaFecha.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N

        tituloAgregarVacuna.setBackground(new java.awt.Color(0, 153, 51));
        tituloAgregarVacuna.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        tituloAgregarVacuna.setForeground(new java.awt.Color(255, 255, 255));
        tituloAgregarVacuna.setText("Vacuna:");

        javax.swing.GroupLayout panelVacunasLayout = new javax.swing.GroupLayout(panelVacunas);
        panelVacunas.setLayout(panelVacunasLayout);
        panelVacunasLayout.setHorizontalGroup(
            panelVacunasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelVacunasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelVacunasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tituloVacunas)
                    .addGroup(panelVacunasLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(panelVacunasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelVacunasLayout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addGroup(panelVacunasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tituloVacunaDada)
                                    .addComponent(tituloVacunaExpira))
                                .addGap(18, 18, 18)
                                .addGroup(panelVacunasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(textVacunaFechaDada, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textVacunaFechaExpira, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(checkBoxVacunaObligatoria)))
                    .addGroup(panelVacunasLayout.createSequentialGroup()
                        .addGroup(panelVacunasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tituloAgregarVacuna)
                            .addComponent(tituloFechaVacunaDada))
                        .addGap(40, 40, 40)
                        .addGroup(panelVacunasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(datePickerAgregarVacunaFecha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(comboBoxVacunaDada, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(tituloAgregarVacunaDada)
                    .addGroup(panelVacunasLayout.createSequentialGroup()
                        .addComponent(tituloCargarVacunas)
                        .addGap(18, 18, 18)
                        .addComponent(buttonCargarVacunas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelVacunasLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(buttonCancelarAgregarVacuna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(buttonAceptarAgregarVacuna, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(54, Short.MAX_VALUE))
        );
        panelVacunasLayout.setVerticalGroup(
            panelVacunasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelVacunasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tituloVacunas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelVacunasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelVacunasLayout.createSequentialGroup()
                        .addComponent(checkBoxVacunaObligatoria)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelVacunasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tituloVacunaDada)
                            .addComponent(textVacunaFechaDada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19)
                        .addGroup(panelVacunasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tituloVacunaExpira)
                            .addComponent(textVacunaFechaExpira, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(47, 47, 47)
                .addComponent(tituloAgregarVacunaDada)
                .addGap(18, 18, 18)
                .addGroup(panelVacunasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBoxVacunaDada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tituloAgregarVacuna))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelVacunasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tituloFechaVacunaDada)
                    .addComponent(datePickerAgregarVacunaFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelVacunasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonAceptarAgregarVacuna, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonCancelarAgregarVacuna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addGroup(panelVacunasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tituloCargarVacunas)
                    .addComponent(buttonCargarVacunas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(78, 78, 78))
        );

        panelHijos.setBackground(new java.awt.Color(0, 102, 204));
        panelHijos.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        labelFechaNacimientoAgregarHijo.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        labelFechaNacimientoAgregarHijo.setForeground(new java.awt.Color(255, 255, 255));
        labelFechaNacimientoAgregarHijo.setText("Fecha de Nacimiento");

        labelNombreAgregarHijo.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        labelNombreAgregarHijo.setForeground(new java.awt.Color(255, 255, 255));
        labelNombreAgregarHijo.setText("Nombre:");

        tituloHijosRegistrados.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        tituloHijosRegistrados.setForeground(new java.awt.Color(255, 255, 255));
        tituloHijosRegistrados.setText("HIJOS REGISTRADOS");

        textErrorNombreAgregarHijo.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        textErrorNombreAgregarHijo.setForeground(new java.awt.Color(255, 255, 255));
        textErrorNombreAgregarHijo.setText("Ingrese Nombre");

        labelNombre.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        labelNombre.setForeground(new java.awt.Color(255, 255, 255));
        labelNombre.setText("Nombre:");

        buttonCancelarAgregarHijo.setBackground(new java.awt.Color(0, 102, 204));
        buttonCancelarAgregarHijo.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        buttonCancelarAgregarHijo.setForeground(new java.awt.Color(255, 255, 255));
        buttonCancelarAgregarHijo.setText("Cancelar");
        buttonCancelarAgregarHijo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        buttonCancelarAgregarHijo.setMaximumSize(new java.awt.Dimension(71, 23));
        buttonCancelarAgregarHijo.setMinimumSize(new java.awt.Dimension(71, 23));
        buttonCancelarAgregarHijo.setPreferredSize(new java.awt.Dimension(71, 23));
        buttonCancelarAgregarHijo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelarAgregarHijoActionPerformed(evt);
            }
        });

        tituloAgregarHijo.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        tituloAgregarHijo.setForeground(new java.awt.Color(255, 255, 255));
        tituloAgregarHijo.setText("AGREGAR HIJO");

        textFechaNacimiento.setEditable(false);
        textFechaNacimiento.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        textFechaNacimiento.setToolTipText("");

        textErrorFechaNacimientoAgregarHijo.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        textErrorFechaNacimientoAgregarHijo.setForeground(new java.awt.Color(255, 255, 255));
        textErrorFechaNacimientoAgregarHijo.setText("Ingrese Fecha de Nacimiento");

        labelFechaNacimiento.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        labelFechaNacimiento.setForeground(new java.awt.Color(255, 255, 255));
        labelFechaNacimiento.setText("Fecha de Nacimiento:");

        buttonAceptarAgregarHijo.setBackground(new java.awt.Color(0, 102, 204));
        buttonAceptarAgregarHijo.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        buttonAceptarAgregarHijo.setForeground(new java.awt.Color(255, 255, 255));
        buttonAceptarAgregarHijo.setText("Aceptar");
        buttonAceptarAgregarHijo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        buttonAceptarAgregarHijo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAceptarAgregarHijoActionPerformed(evt);
            }
        });

        comboBoxHijos.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        comboBoxHijos.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboBoxHijos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxHijosActionPerformed(evt);
            }
        });

        datePickerFechaNacimientoAgregarHijo.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        datePickerFechaNacimientoAgregarHijo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                datePickerFechaNacimientoAgregarHijoActionPerformed(evt);
            }
        });

        textNombreAgregarHijo.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        textNombreAgregarHijo.setPreferredSize(new java.awt.Dimension(6, 22));

        javax.swing.GroupLayout panelHijosLayout = new javax.swing.GroupLayout(panelHijos);
        panelHijos.setLayout(panelHijosLayout);
        panelHijosLayout.setHorizontalGroup(
            panelHijosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelHijosLayout.createSequentialGroup()
                .addGroup(panelHijosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelHijosLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(panelHijosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tituloAgregarHijo)
                            .addComponent(tituloHijosRegistrados)
                            .addGroup(panelHijosLayout.createSequentialGroup()
                                .addGroup(panelHijosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelFechaNacimientoAgregarHijo)
                                    .addComponent(labelNombreAgregarHijo))
                                .addGap(26, 26, 26)
                                .addGroup(panelHijosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panelHijosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(panelHijosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(textNombreAgregarHijo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(datePickerFechaNacimientoAgregarHijo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelHijosLayout.createSequentialGroup()
                                            .addGap(6, 6, 6)
                                            .addComponent(textErrorNombreAgregarHijo)))
                                    .addGroup(panelHijosLayout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(textErrorFechaNacimientoAgregarHijo))))
                            .addGroup(panelHijosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelHijosLayout.createSequentialGroup()
                                    .addComponent(labelFechaNacimiento)
                                    .addGap(18, 18, 18)
                                    .addComponent(textFechaNacimiento))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelHijosLayout.createSequentialGroup()
                                    .addComponent(labelNombre)
                                    .addGap(84, 84, 84)
                                    .addComponent(comboBoxHijos, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(panelHijosLayout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(buttonCancelarAgregarHijo, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(buttonAceptarAgregarHijo, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        panelHijosLayout.setVerticalGroup(
            panelHijosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelHijosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tituloHijosRegistrados)
                .addGap(23, 23, 23)
                .addGroup(panelHijosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNombre)
                    .addComponent(comboBoxHijos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelHijosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelFechaNacimiento)
                    .addComponent(textFechaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tituloAgregarHijo)
                .addGap(18, 18, 18)
                .addGroup(panelHijosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNombreAgregarHijo)
                    .addComponent(textNombreAgregarHijo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addComponent(textErrorNombreAgregarHijo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelHijosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelFechaNacimientoAgregarHijo)
                    .addComponent(datePickerFechaNacimientoAgregarHijo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textErrorFechaNacimientoAgregarHijo)
                .addGap(18, 18, 18)
                .addGroup(panelHijosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonCancelarAgregarHijo, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonAceptarAgregarHijo, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(94, 94, 94))
        );

        javax.swing.GroupLayout tabHijosYVacunasLayout = new javax.swing.GroupLayout(tabHijosYVacunas);
        tabHijosYVacunas.setLayout(tabHijosYVacunasLayout);
        tabHijosYVacunasLayout.setHorizontalGroup(
            tabHijosYVacunasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabHijosYVacunasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelHijos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(panelVacunas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        tabHijosYVacunasLayout.setVerticalGroup(
            tabHijosYVacunasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabHijosYVacunasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tabHijosYVacunasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panelHijos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelVacunas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 18, Short.MAX_VALUE))
        );

        tabbedPane.addTab("Hijos y Vacunas", tabHijosYVacunas);

        tabAgenda.setBackground(new java.awt.Color(204, 102, 0));
        tabAgenda.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tituloProximasConsultas.setBackground(new java.awt.Color(204, 102, 0));
        tituloProximasConsultas.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        tituloProximasConsultas.setForeground(new java.awt.Color(255, 255, 255));
        tituloProximasConsultas.setText("PROXIMAS CONSULTAS");

        labelFechaProximasConsultas.setBackground(new java.awt.Color(204, 102, 0));
        labelFechaProximasConsultas.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        labelFechaProximasConsultas.setForeground(new java.awt.Color(255, 255, 255));
        labelFechaProximasConsultas.setText("Fecha:");

        listaFechaProximasConsultas.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        listaFechaProximasConsultas.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        listaFechaProximasConsultas.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listaFechaProximasConsultasValueChanged(evt);
            }
        });
        paneFechaProximasConsultas.setViewportView(listaFechaProximasConsultas);

        textAgregarNota.setColumns(20);
        textAgregarNota.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        textAgregarNota.setRows(5);
        paneAgregarNota.setViewportView(textAgregarNota);

        labelNotaProximasConsultas.setBackground(new java.awt.Color(102, 51, 0));
        labelNotaProximasConsultas.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        labelNotaProximasConsultas.setForeground(new java.awt.Color(255, 255, 255));
        labelNotaProximasConsultas.setText("Nota:");

        checkBoxRealizadaProximasConsultas.setBackground(new java.awt.Color(204, 102, 0));
        checkBoxRealizadaProximasConsultas.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        checkBoxRealizadaProximasConsultas.setForeground(new java.awt.Color(255, 255, 255));
        checkBoxRealizadaProximasConsultas.setText("Realizada");
        checkBoxRealizadaProximasConsultas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBoxRealizadaProximasConsultasActionPerformed(evt);
            }
        });

        textNotaConsultasAnteriores.setEditable(false);
        textNotaConsultasAnteriores.setColumns(20);
        textNotaConsultasAnteriores.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        textNotaConsultasAnteriores.setRows(5);
        paneNotaConsultasAnteriores.setViewportView(textNotaConsultasAnteriores);

        labelNotaConsultasAnteriores.setBackground(new java.awt.Color(204, 102, 0));
        labelNotaConsultasAnteriores.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        labelNotaConsultasAnteriores.setForeground(new java.awt.Color(255, 255, 255));
        labelNotaConsultasAnteriores.setText("Nota:");

        checkBoxRealizadaConsultasAnteriores.setBackground(new java.awt.Color(204, 102, 0));
        checkBoxRealizadaConsultasAnteriores.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        checkBoxRealizadaConsultasAnteriores.setForeground(new java.awt.Color(255, 255, 255));
        checkBoxRealizadaConsultasAnteriores.setText("Realizada");
        checkBoxRealizadaConsultasAnteriores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBoxRealizadaConsultasAnterioresActionPerformed(evt);
            }
        });

        tituloConsultasAnteriores.setBackground(new java.awt.Color(204, 102, 0));
        tituloConsultasAnteriores.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        tituloConsultasAnteriores.setForeground(new java.awt.Color(255, 255, 255));
        tituloConsultasAnteriores.setText("CONSULTAS ANTERIORES");

        labelFechaConsultasAnteriores.setBackground(new java.awt.Color(204, 102, 0));
        labelFechaConsultasAnteriores.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        labelFechaConsultasAnteriores.setForeground(new java.awt.Color(255, 255, 255));
        labelFechaConsultasAnteriores.setText("Fecha:");

        listaFechaConsultasAnteriores.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        listaFechaConsultasAnteriores.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        listaFechaConsultasAnteriores.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listaFechaConsultasAnterioresValueChanged(evt);
            }
        });
        paneFechaConsultasAnteriores.setViewportView(listaFechaConsultasAnteriores);

        tituloAgregarConsulta.setBackground(new java.awt.Color(204, 102, 0));
        tituloAgregarConsulta.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        tituloAgregarConsulta.setForeground(new java.awt.Color(255, 255, 255));
        tituloAgregarConsulta.setText("AGREGAR CONSULTA");

        labelFechaAgregarConsulta.setBackground(new java.awt.Color(204, 102, 0));
        labelFechaAgregarConsulta.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        labelFechaAgregarConsulta.setForeground(new java.awt.Color(255, 255, 255));
        labelFechaAgregarConsulta.setText("Fecha:");

        labelNotaAgregarConsulta.setBackground(new java.awt.Color(204, 102, 0));
        labelNotaAgregarConsulta.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        labelNotaAgregarConsulta.setForeground(new java.awt.Color(255, 255, 255));
        labelNotaAgregarConsulta.setText("Nota:");

        datePickerAgregarConsulta.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        datePickerAgregarConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                datePickerAgregarConsultaActionPerformed(evt);
            }
        });

        notaProximasConsultas.setEditable(false);
        notaProximasConsultas.setColumns(20);
        notaProximasConsultas.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        notaProximasConsultas.setRows(5);
        paneNotaProximasConsultas.setViewportView(notaProximasConsultas);

        checkBoxRevisadoAgregarConsulta.setBackground(new java.awt.Color(204, 102, 0));
        checkBoxRevisadoAgregarConsulta.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        checkBoxRevisadoAgregarConsulta.setForeground(new java.awt.Color(255, 255, 255));
        checkBoxRevisadoAgregarConsulta.setText("He revisado que los datos fueran correctos.");
        checkBoxRevisadoAgregarConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBoxRevisadoAgregarConsultaActionPerformed(evt);
            }
        });

        buttonCancelarAgregarConsulta.setBackground(new java.awt.Color(204, 102, 0));
        buttonCancelarAgregarConsulta.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        buttonCancelarAgregarConsulta.setForeground(new java.awt.Color(255, 255, 255));
        buttonCancelarAgregarConsulta.setText("Cancelar");
        buttonCancelarAgregarConsulta.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        buttonCancelarAgregarConsulta.setMaximumSize(new java.awt.Dimension(71, 23));
        buttonCancelarAgregarConsulta.setMinimumSize(new java.awt.Dimension(71, 23));
        buttonCancelarAgregarConsulta.setPreferredSize(new java.awt.Dimension(71, 23));
        buttonCancelarAgregarConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelarAgregarConsultaActionPerformed(evt);
            }
        });

        buttonAceptarAgregarConsulta.setBackground(new java.awt.Color(204, 102, 0));
        buttonAceptarAgregarConsulta.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        buttonAceptarAgregarConsulta.setForeground(new java.awt.Color(255, 255, 255));
        buttonAceptarAgregarConsulta.setText("Aceptar");
        buttonAceptarAgregarConsulta.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        buttonAceptarAgregarConsulta.setEnabled(false);
        buttonAceptarAgregarConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAceptarAgregarConsultaActionPerformed(evt);
            }
        });

        textErrorFechaAgregarConsulta.setBackground(new java.awt.Color(204, 102, 0));
        textErrorFechaAgregarConsulta.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        textErrorFechaAgregarConsulta.setForeground(new java.awt.Color(255, 255, 255));
        textErrorFechaAgregarConsulta.setText("Ingrese Fecha de Consulta");

        textErrorNoChild.setBackground(new java.awt.Color(204, 102, 0));
        textErrorNoChild.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        textErrorNoChild.setForeground(new java.awt.Color(255, 255, 255));
        textErrorNoChild.setText("Debe seleccionar un hijo");

        javax.swing.GroupLayout tabAgendaLayout = new javax.swing.GroupLayout(tabAgenda);
        tabAgenda.setLayout(tabAgendaLayout);
        tabAgendaLayout.setHorizontalGroup(
            tabAgendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabAgendaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tabAgendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabAgendaLayout.createSequentialGroup()
                        .addGroup(tabAgendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelFechaProximasConsultas)
                            .addComponent(paneFechaProximasConsultas, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(tabAgendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelNotaProximasConsultas)
                            .addComponent(paneNotaProximasConsultas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkBoxRealizadaProximasConsultas))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                        .addGroup(tabAgendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tituloConsultasAnteriores)
                            .addGroup(tabAgendaLayout.createSequentialGroup()
                                .addGroup(tabAgendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelFechaConsultasAnteriores)
                                    .addComponent(paneFechaConsultasAnteriores, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(28, 28, 28)
                                .addGroup(tabAgendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelNotaConsultasAnteriores)
                                    .addComponent(paneNotaConsultasAnteriores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(checkBoxRealizadaConsultasAnteriores))))
                        .addGap(53, 53, 53))
                    .addGroup(tabAgendaLayout.createSequentialGroup()
                        .addComponent(tituloProximasConsultas)
                        .addContainerGap(647, Short.MAX_VALUE))
                    .addGroup(tabAgendaLayout.createSequentialGroup()
                        .addGroup(tabAgendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tituloAgregarConsulta)
                            .addGroup(tabAgendaLayout.createSequentialGroup()
                                .addGroup(tabAgendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelFechaAgregarConsulta)
                                    .addComponent(labelNotaAgregarConsulta))
                                .addGap(18, 18, 18)
                                .addGroup(tabAgendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(tabAgendaLayout.createSequentialGroup()
                                        .addGroup(tabAgendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(paneAgregarNota, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(datePickerAgregarConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(tabAgendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(textErrorFechaAgregarConsulta)
                                            .addComponent(textErrorNoChild)))
                                    .addGroup(tabAgendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(tabAgendaLayout.createSequentialGroup()
                                            .addComponent(buttonCancelarAgregarConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(buttonAceptarAgregarConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(checkBoxRevisadoAgregarConsulta)))))
                        .addGap(0, 341, Short.MAX_VALUE))))
        );
        tabAgendaLayout.setVerticalGroup(
            tabAgendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabAgendaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tabAgendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabAgendaLayout.createSequentialGroup()
                        .addComponent(tituloConsultasAnteriores)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(tabAgendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelFechaConsultasAnteriores)
                            .addComponent(labelNotaConsultasAnteriores))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabAgendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(tabAgendaLayout.createSequentialGroup()
                                .addComponent(paneNotaConsultasAnteriores, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(checkBoxRealizadaConsultasAnteriores))
                            .addComponent(paneFechaConsultasAnteriores, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(tabAgendaLayout.createSequentialGroup()
                        .addComponent(tituloProximasConsultas)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(tabAgendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelFechaProximasConsultas)
                            .addComponent(labelNotaProximasConsultas))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabAgendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(tabAgendaLayout.createSequentialGroup()
                                .addComponent(paneNotaProximasConsultas, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(checkBoxRealizadaProximasConsultas))
                            .addComponent(paneFechaProximasConsultas, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(36, 36, 36)
                .addComponent(tituloAgregarConsulta)
                .addGap(18, 18, 18)
                .addGroup(tabAgendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelFechaAgregarConsulta)
                    .addComponent(datePickerAgregarConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textErrorFechaAgregarConsulta))
                .addGroup(tabAgendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabAgendaLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(tabAgendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(paneAgregarNota, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelNotaAgregarConsulta)))
                    .addGroup(tabAgendaLayout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addComponent(textErrorNoChild)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(checkBoxRevisadoAgregarConsulta)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tabAgendaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonCancelarAgregarConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonAceptarAgregarConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabbedPane.addTab("Agenda", tabAgenda);

        tabCrecimiento.setBackground(new java.awt.Color(0, 102, 102));
        tabCrecimiento.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTextFieldPeso.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jTextFieldPeso.setMaximumSize(new java.awt.Dimension(6, 20));

        textErrorFechaAgregarCrecimiento.setBackground(new java.awt.Color(0, 102, 102));
        textErrorFechaAgregarCrecimiento.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        textErrorFechaAgregarCrecimiento.setForeground(new java.awt.Color(255, 255, 255));
        textErrorFechaAgregarCrecimiento.setText("Ingrese una fecha");

        jLabel3.setBackground(new java.awt.Color(0, 102, 102));
        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Perimetro Craneal:");

        jLabel1.setBackground(new java.awt.Color(0, 102, 102));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Altura:");

        jButtonCanelarRegistroCrecimiento.setBackground(new java.awt.Color(0, 102, 102));
        jButtonCanelarRegistroCrecimiento.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jButtonCanelarRegistroCrecimiento.setForeground(new java.awt.Color(255, 255, 255));
        jButtonCanelarRegistroCrecimiento.setText("Cancelar");
        jButtonCanelarRegistroCrecimiento.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jButtonCanelarRegistroCrecimiento.setMaximumSize(new java.awt.Dimension(71, 23));
        jButtonCanelarRegistroCrecimiento.setMinimumSize(new java.awt.Dimension(71, 23));
        jButtonCanelarRegistroCrecimiento.setPreferredSize(new java.awt.Dimension(71, 23));
        jButtonCanelarRegistroCrecimiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCanelarRegistroCrecimientoActionPerformed(evt);
            }
        });

        jLabelTit.setBackground(new java.awt.Color(0, 102, 102));
        jLabelTit.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabelTit.setForeground(new java.awt.Color(255, 255, 255));
        jLabelTit.setText("AGREGAR CRECIMIENTO");

        jLabelErrAlt.setBackground(new java.awt.Color(0, 102, 102));
        jLabelErrAlt.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabelErrAlt.setForeground(new java.awt.Color(255, 255, 255));
        jLabelErrAlt.setText("Ingrese una altura");

        labelFechaAgregarCrecimiento.setBackground(new java.awt.Color(0, 102, 102));
        labelFechaAgregarCrecimiento.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        labelFechaAgregarCrecimiento.setForeground(new java.awt.Color(255, 255, 255));
        labelFechaAgregarCrecimiento.setText("Fecha:");

        jLabel2.setBackground(new java.awt.Color(0, 102, 102));
        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Peso:");

        jTextFieldPerimetro.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jTextFieldPerimetro.setMaximumSize(new java.awt.Dimension(6, 20));
        jTextFieldPerimetro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPerimetroActionPerformed(evt);
            }
        });

        datePickerAgregarCrecimiento.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        datePickerAgregarCrecimiento.setMaximumSize(new java.awt.Dimension(2, 20));
        datePickerAgregarCrecimiento.setMinimumSize(new java.awt.Dimension(2, 20));
        datePickerAgregarCrecimiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                datePickerAgregarCrecimientoActionPerformed(evt);
            }
        });

        jButtonAceptIngresoDeCrecimiento.setBackground(new java.awt.Color(0, 102, 102));
        jButtonAceptIngresoDeCrecimiento.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jButtonAceptIngresoDeCrecimiento.setForeground(new java.awt.Color(255, 255, 255));
        jButtonAceptIngresoDeCrecimiento.setText("Aceptar");
        jButtonAceptIngresoDeCrecimiento.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jButtonAceptIngresoDeCrecimiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAceptIngresoDeCrecimientoActionPerformed(evt);
            }
        });

        jTextFieldAltura.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jTextFieldAltura.setMaximumSize(new java.awt.Dimension(6, 20));

        jLabelErrPermie.setBackground(new java.awt.Color(0, 102, 102));
        jLabelErrPermie.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabelErrPermie.setForeground(new java.awt.Color(255, 255, 255));
        jLabelErrPermie.setText("Ingrese un perimetro craneal");

        jLabelErrPeso.setBackground(new java.awt.Color(0, 102, 102));
        jLabelErrPeso.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        jLabelErrPeso.setForeground(new java.awt.Color(255, 255, 255));
        jLabelErrPeso.setText("Ingrese un peso");

        graficaPerimetro.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        graficaPerimetro.setMaximumSize(new java.awt.Dimension(353, 251));
        graficaPerimetro.setMinimumSize(new java.awt.Dimension(353, 251));
        graficaPerimetro.setPreferredSize(new java.awt.Dimension(353, 251));

        graficaPeso.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        graficaPeso.setMaximumSize(new java.awt.Dimension(353, 251));
        graficaPeso.setMinimumSize(new java.awt.Dimension(353, 251));
        graficaPeso.setPreferredSize(new java.awt.Dimension(353, 251));

        graficaEstatura.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        graficaEstatura.setMaximumSize(new java.awt.Dimension(353, 251));
        graficaEstatura.setMinimumSize(new java.awt.Dimension(353, 251));
        graficaEstatura.setPreferredSize(new java.awt.Dimension(353, 251));

        javax.swing.GroupLayout tabCrecimientoLayout = new javax.swing.GroupLayout(tabCrecimiento);
        tabCrecimiento.setLayout(tabCrecimientoLayout);
        tabCrecimientoLayout.setHorizontalGroup(
            tabCrecimientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabCrecimientoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tabCrecimientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(graficaPerimetro, javax.swing.GroupLayout.DEFAULT_SIZE, 364, Short.MAX_VALUE)
                    .addComponent(graficaEstatura, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(29, 29, 29)
                .addGroup(tabCrecimientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabCrecimientoLayout.createSequentialGroup()
                        .addGroup(tabCrecimientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelTit)
                            .addGroup(tabCrecimientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(tabCrecimientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jTextFieldPeso, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(tabCrecimientoLayout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(16, 16, 16)
                                        .addComponent(jTextFieldPerimetro, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jTextFieldAltura, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jLabel2)
                                .addComponent(jLabel1)
                                .addGroup(tabCrecimientoLayout.createSequentialGroup()
                                    .addComponent(labelFechaAgregarCrecimiento)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(datePickerAgregarCrecimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(tabCrecimientoLayout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addComponent(jButtonCanelarRegistroCrecimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tabCrecimientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textErrorFechaAgregarCrecimiento)
                            .addComponent(jLabelErrPermie)
                            .addComponent(jLabelErrAlt)
                            .addComponent(jLabelErrPeso)
                            .addComponent(jButtonAceptIngresoDeCrecimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(graficaPeso, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        tabCrecimientoLayout.setVerticalGroup(
            tabCrecimientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabCrecimientoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tabCrecimientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(graficaEstatura, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(graficaPeso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(tabCrecimientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabCrecimientoLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabelTit)
                        .addGap(19, 19, 19)
                        .addGroup(tabCrecimientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelFechaAgregarCrecimiento)
                            .addComponent(datePickerAgregarCrecimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textErrorFechaAgregarCrecimiento))
                        .addGap(18, 18, 18)
                        .addGroup(tabCrecimientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jTextFieldAltura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelErrAlt))
                        .addGap(18, 18, 18)
                        .addGroup(tabCrecimientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldPeso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jLabelErrPeso))
                        .addGap(18, 18, 18)
                        .addGroup(tabCrecimientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jTextFieldPerimetro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelErrPermie))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(tabCrecimientoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonCanelarRegistroCrecimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonAceptIngresoDeCrecimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(graficaPerimetro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(95, 95, 95))
        );

        tabbedPane.addTab("Crecimiento y Desarrollo", tabCrecimiento);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabbedPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 561, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setBounds(0, 0, 833, 600);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        try{
            FileOutputStream fileOut = new FileOutputStream("data.dat");
            ObjectOutputStream out = new ObjectOutputStream(fileOut);
            out.writeObject(sistema);
            out.close();
            fileOut.close();
        }
        catch(IOException i){
            i.printStackTrace();
        } 
        System.exit(0);
    }//GEN-LAST:event_formWindowClosing

    private void jButtonAceptIngresoDeCrecimientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAceptIngresoDeCrecimientoActionPerformed
        //Todos Campos Vacios
        if (jTextFieldAltura.getText().isEmpty() && jTextFieldPeso.getText().isEmpty() && jTextFieldPerimetro.getText().isEmpty() && fechaCrecimiento == null) {
            textErrorFechaAgregarCrecimiento.setVisible(true);
            jLabelErrAlt.setVisible(true);
            jLabelErrPeso.setVisible(true);
            jLabelErrPermie.setVisible(true);
        }else if(jTextFieldAltura.getText().isEmpty() && jTextFieldPeso.getText().isEmpty() && jTextFieldPerimetro.getText().isEmpty()){
            textErrorFechaAgregarCrecimiento.setVisible(false);
            jLabelErrAlt.setVisible(true);
            jLabelErrPeso.setVisible(true);
            jLabelErrPermie.setVisible(true);
        }else if(jTextFieldAltura.getText().isEmpty() && jTextFieldPeso.getText().isEmpty()){
            textErrorFechaAgregarCrecimiento.setVisible(false);
            jLabelErrAlt.setVisible(true);
            jLabelErrPeso.setVisible(true);
            jLabelErrPermie.setVisible(false);
        }else if(jTextFieldAltura.getText().isEmpty() && jTextFieldPerimetro.getText().isEmpty()){
            textErrorFechaAgregarCrecimiento.setVisible(false);
            jLabelErrAlt.setVisible(true);
            jLabelErrPeso.setVisible(false);
            jLabelErrPermie.setVisible(true);
        }else if(jTextFieldPeso.getText().isEmpty() && jTextFieldPerimetro.getText().isEmpty()){
            textErrorFechaAgregarCrecimiento.setVisible(false);
            jLabelErrAlt.setVisible(false);
            jLabelErrPeso.setVisible(true);
            jLabelErrPermie.setVisible(true);
        }else if(fechaCrecimiento == null && jTextFieldAltura.getText().isEmpty() && jTextFieldPeso.getText().isEmpty()){
            textErrorFechaAgregarCrecimiento.setVisible(true);
            jLabelErrAlt.setVisible(true);
            jLabelErrPeso.setVisible(true);
            jLabelErrPermie.setVisible(false);
        }else if(fechaCrecimiento == null && jTextFieldAltura.getText().isEmpty() && jTextFieldPerimetro.getText().isEmpty()){
            textErrorFechaAgregarCrecimiento.setVisible(true);
            jLabelErrAlt.setVisible(true);
            jLabelErrPeso.setVisible(false);
            jLabelErrPermie.setVisible(true);
        }else if(fechaCrecimiento == null && jTextFieldPeso.getText().isEmpty() && jTextFieldPerimetro.getText().isEmpty()){
            textErrorFechaAgregarCrecimiento.setVisible(true);
            jLabelErrAlt.setVisible(false);
            jLabelErrPeso.setVisible(true);
            jLabelErrPermie.setVisible(true);
        }else if(fechaCrecimiento == null && jTextFieldAltura.getText().isEmpty()){
            textErrorFechaAgregarCrecimiento.setVisible(true);
            jLabelErrAlt.setVisible(true);
            jLabelErrPeso.setVisible(false);
            jLabelErrPermie.setVisible(false);
        }else if(fechaCrecimiento == null && jTextFieldPeso.getText().isEmpty()){
            textErrorFechaAgregarCrecimiento.setVisible(true);
            jLabelErrAlt.setVisible(false);
            jLabelErrPeso.setVisible(true);
            jLabelErrPermie.setVisible(false);
        }else if(fechaCrecimiento == null && jTextFieldPerimetro.getText().isEmpty()){
            textErrorFechaAgregarCrecimiento.setVisible(true);
            jLabelErrAlt.setVisible(false);
            jLabelErrPeso.setVisible(false);
            jLabelErrPermie.setVisible(true);
        }else if(fechaCrecimiento == null){
            textErrorFechaAgregarCrecimiento.setVisible(true);
            jLabelErrAlt.setVisible(false);
            jLabelErrPeso.setVisible(false);
            jLabelErrPermie.setVisible(false);
        }else if(jTextFieldAltura.getText().isEmpty()){
            textErrorFechaAgregarCrecimiento.setVisible(false);
            jLabelErrAlt.setVisible(true);
            jLabelErrPeso.setVisible(false);
            jLabelErrPermie.setVisible(false);
        } else if(jTextFieldPeso.getText().isEmpty()){
            textErrorFechaAgregarCrecimiento.setVisible(false);
            jLabelErrPeso.setVisible(true);
            jLabelErrAlt.setVisible(false);
            jLabelErrPermie.setVisible(false);
        } else if(jTextFieldPerimetro.getText().isEmpty()){
            textErrorFechaAgregarCrecimiento.setVisible(false);
            jLabelErrAlt.setVisible(false);
            jLabelErrPeso.setVisible(false);
            jLabelErrPermie.setVisible(true);
        }else{
            try {
                //Get data from form
                int altura = Integer.parseInt(jTextFieldAltura.getText());
                int peso = Integer.parseInt(jTextFieldPeso.getText());
                int perimetro = Integer.parseInt(jTextFieldPerimetro.getText());
                //Evaluate data
                if (altura > 0 && peso > 0 && perimetro > 0 && fechaCrecimiento != null) {
                    selectedChild.addGrowth(fechaCrecimiento, altura, peso, perimetro);
                    //Warnings Reset
                    textErrorFechaAgregarCrecimiento.setVisible(false);
                    jLabelErrAlt.setVisible(false);
                    jLabelErrPeso.setVisible(false);
                    jLabelErrPermie.setVisible(false);
                    //Clear input
                    datePickerAgregarCrecimiento.setDate(null);
                    jTextFieldAltura.setText("");
                    jTextFieldPeso.setText("");
                    jTextFieldPerimetro.setText("");
                    //Actualizar Grafica
                    updateChart();
                }
            } catch (NumberFormatException e) {
                jLabelErrAlt.setVisible(true);
                jLabelErrPeso.setVisible(true);
                jLabelErrPermie.setVisible(true);
            }
        }
    }//GEN-LAST:event_jButtonAceptIngresoDeCrecimientoActionPerformed

    private void datePickerAgregarCrecimientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_datePickerAgregarCrecimientoActionPerformed
        Date fecha = datePickerAgregarCrecimiento.getDate();
        fechaCrecimiento = fecha.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
    }//GEN-LAST:event_datePickerAgregarCrecimientoActionPerformed

    private void jTextFieldPerimetroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldPerimetroActionPerformed

    }//GEN-LAST:event_jTextFieldPerimetroActionPerformed

    private void jButtonCanelarRegistroCrecimientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCanelarRegistroCrecimientoActionPerformed
        jTextFieldAltura.setText("");
        jTextFieldPeso.setText("");
        jTextFieldPerimetro.setText("");
        datePickerAgregarCrecimiento.setDate(null);
        textErrorFechaAgregarCrecimiento.setVisible(false);
        jLabelErrAlt.setVisible(false);
        jLabelErrPeso.setVisible(false);
        jLabelErrPermie.setVisible(false);
    }//GEN-LAST:event_jButtonCanelarRegistroCrecimientoActionPerformed

    private void buttonAceptarAgregarConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAceptarAgregarConsultaActionPerformed
        if (selectedChild == null && fechaConsulta == null) {
            textErrorFechaAgregarConsulta.setVisible(true);
            textErrorNoChild.setVisible(true);
        }
        else if(selectedChild == null){
            textErrorFechaAgregarConsulta.setVisible(false);
            textErrorNoChild.setVisible(true);
        }
        else if(fechaConsulta == null){
            textErrorFechaAgregarConsulta.setVisible(true);
            textErrorNoChild.setVisible(false);
        }
        else{
            //Tomo nota ingresada por el usuario
            String nota = textAgregarNota.getText();
            //Creo y agrego la consulta al hijo seleccionado
            selectedChild.addAppointment(nota, fechaConsulta);
            //Saco los carteles de error
            textErrorFechaAgregarConsulta.setVisible(false);
            textErrorNoChild.setVisible(false);
            //Cargo nuevamente las consultas del hijo seleccionado a las listas
            this.cargarAppointmentDeHijo();
            //Elimino datos del formulario de agregar consulta
            datePickerAgregarConsulta.setDate(null);
            textAgregarNota.setText("");
            checkBoxRevisadoAgregarConsulta.setSelected(false);
            buttonAceptarAgregarConsulta.setEnabled(false);
        }
    }//GEN-LAST:event_buttonAceptarAgregarConsultaActionPerformed

    private void buttonCancelarAgregarConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelarAgregarConsultaActionPerformed
        datePickerAgregarConsulta.setDate(null);
        textAgregarNota.setText("");
        buttonAceptarAgregarConsulta.setEnabled(false);
        checkBoxRevisadoAgregarConsulta.setSelected(false);
    }//GEN-LAST:event_buttonCancelarAgregarConsultaActionPerformed

    private void checkBoxRevisadoAgregarConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBoxRevisadoAgregarConsultaActionPerformed
        // TODO add your handling code here:
        if (checkBoxRevisadoAgregarConsulta.isSelected()) {
            buttonAceptarAgregarConsulta.setEnabled(true);
        }
        else{
            buttonAceptarAgregarConsulta.setEnabled(false);
        }
    }//GEN-LAST:event_checkBoxRevisadoAgregarConsultaActionPerformed

    private void datePickerAgregarConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_datePickerAgregarConsultaActionPerformed
        Date fecha = datePickerAgregarConsulta.getDate();
        fechaConsulta = fecha.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
    }//GEN-LAST:event_datePickerAgregarConsultaActionPerformed

    private void listaFechaConsultasAnterioresValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listaFechaConsultasAnterioresValueChanged
        //This line prevents double events
        if (!evt.getValueIsAdjusting()) {
        }
        else{
            //Obtengo lugar en el ArrayList de Consultas Anteriores
            int indexConsulta = listaFechaConsultasAnteriores.getSelectedIndex();
            //Obtengo la nota de ese ArrayList y setteo la nota en el cuadro de texto
            String nota = consultasAnteriores.get(indexConsulta).getNote();
            textNotaConsultasAnteriores.setText(nota);
            //Obtengo el estado de la consulta, si fue o no realizada y lo reflejo en el checkbox
            boolean realizada = consultasAnteriores.get(indexConsulta).getAttended();
            checkBoxRealizadaConsultasAnteriores.setSelected(realizada);
        }
    }//GEN-LAST:event_listaFechaConsultasAnterioresValueChanged

    private void checkBoxRealizadaConsultasAnterioresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBoxRealizadaConsultasAnterioresActionPerformed
        //Obtengo index de Consulta de lista visible
        int indexConsulta = listaFechaConsultasAnteriores.getSelectedIndex();
        //Obtengo estado del checkbox
        boolean realizada = checkBoxRealizadaConsultasAnteriores.isSelected();
        //Obtengo el Appointment del index obtenido
        Appointment ap = consultasAnteriores.get(indexConsulta);
        //Recorro la lista original y checkeo que el objeto de la lista visible sea el mismo que el de la lista logica
        for (int i = 0; i < selectedChild.getListAppointments().size(); i++) {
            Appointment original = selectedChild.getListAppointments().get(i);
            if (original.equals(ap)) {
                //Si son iguales setteo en el original, el estado del checkbox
                original.setAttended(realizada);
            }
        }
    }//GEN-LAST:event_checkBoxRealizadaConsultasAnterioresActionPerformed

    private void checkBoxRealizadaProximasConsultasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBoxRealizadaProximasConsultasActionPerformed
        //Obtengo index de Consulta de lista visible
        int indexConsulta = listaFechaProximasConsultas.getSelectedIndex();
        //Obtengo estado del checkbox
        boolean realizada = checkBoxRealizadaProximasConsultas.isSelected();
        //Obtengo el Appointment del index obtenido
        Appointment ap = consultasProximas.get(indexConsulta);
        //Recorro la lista original y checkeo que el objeto de la lista visible sea el mismo que el de la lista logica
        for (int i = 0; i < selectedChild.getListAppointments().size(); i++) {
            Appointment original = selectedChild.getListAppointments().get(i);
            if (original.equals(ap)) {
                //Si son iguales setteo en el original, el estado del checkbox
                original.setAttended(realizada);
            }
        }
    }//GEN-LAST:event_checkBoxRealizadaProximasConsultasActionPerformed

    private void listaFechaProximasConsultasValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listaFechaProximasConsultasValueChanged
        //This line prevents double events
        if (!evt.getValueIsAdjusting()) {
        }
        else{
            //Obtengo lugar en el ArrayList de Consultas Proximas
            int indexConsulta = listaFechaProximasConsultas.getSelectedIndex();
            //Obtengo la nota de ese ArrayList y setteo la nota en el cuadro de texto
            String nota = consultasProximas.get(indexConsulta).getNote();
            notaProximasConsultas.setText(nota);
            //Obtengo el estado de la consulta, si fue o no realizada y lo reflejo en el checkbox
            boolean realizada = consultasProximas.get(indexConsulta).getAttended();
            checkBoxRealizadaProximasConsultas.setSelected(realizada);
        }
    }//GEN-LAST:event_listaFechaProximasConsultasValueChanged

    private void datePickerFechaNacimientoAgregarHijoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_datePickerFechaNacimientoAgregarHijoActionPerformed
        Date fecha = datePickerFechaNacimientoAgregarHijo.getDate();
        fechaNacimiento = fecha.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
    }//GEN-LAST:event_datePickerFechaNacimientoAgregarHijoActionPerformed

    private void comboBoxHijosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxHijosActionPerformed
        this.cargarHijoDelComboBox();
        this.updateChart();
    }//GEN-LAST:event_comboBoxHijosActionPerformed

    private void buttonAceptarAgregarHijoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAceptarAgregarHijoActionPerformed
        //Checkeo de campos
        //Nombre y Fecha de Nacimiento
        if (textNombreAgregarHijo.getText().isEmpty() && fechaNacimiento == null) {
            textErrorNombreAgregarHijo.setVisible(true);
            textErrorFechaNacimientoAgregarHijo.setVisible(true);
        }
        //Nombre
        else if(textNombreAgregarHijo.getText().isEmpty()){
            textErrorNombreAgregarHijo.setVisible(true);
            textErrorFechaNacimientoAgregarHijo.setVisible(false);
        }
        //Fecha de Nacimiento
        else if(fechaNacimiento == null){
            textErrorNombreAgregarHijo.setVisible(false);
            textErrorFechaNacimientoAgregarHijo.setVisible(true);
        }
        //Agrego Hijo
        else{
            String nombre = textNombreAgregarHijo.getText();
            if (sistema.ingresarHijoCheck(nombre, fechaNacimiento)) {
                sistema.ingresarHijo(nombre,fechaNacimiento);
                textNombreAgregarHijo.setText("");
                fechaNacimiento = null;
                textErrorNombreAgregarHijo.setVisible(false);
                textErrorFechaNacimientoAgregarHijo.setVisible(false);
                comboBoxHijos.setModel(new DefaultComboBoxModel(sistema.getListAllChildren().toArray()));
                this.cargarHijoDelComboBox();
                this.cargarAppointmentDeHijo();
                this.cargarVacunasHijo();
            }
        }
    }//GEN-LAST:event_buttonAceptarAgregarHijoActionPerformed

    private void buttonCancelarAgregarHijoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelarAgregarHijoActionPerformed
        textNombreAgregarHijo.setText("");
        fechaNacimiento = null;
        datePickerFechaNacimientoAgregarHijo.setDate(null);
    }//GEN-LAST:event_buttonCancelarAgregarHijoActionPerformed

    private void buttonCancelarAgregarVacunaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelarAgregarVacunaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonCancelarAgregarVacunaActionPerformed

    private void buttonAceptarAgregarVacunaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAceptarAgregarVacunaActionPerformed
        // TODO add your handling code here:
        Date fecha = datePickerAgregarVacunaFecha.getDate();
        if (fecha != null) {
            LocalDate fechaAgregarVacuna = fecha.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
            for (int i = 0; i < selectedChild.getListVaccines().size(); i++) {
                Vaccine vac = selectedChild.getListVaccines().get(i);
                if (comboBoxVacunaDada.getModel().getSelectedItem().equals(vac)) {
                    selectedChild.addReceivedVaccine(vac, fechaAgregarVacuna);
                    this.cargarVacunasHijo();
                }
            }
        }

    }//GEN-LAST:event_buttonAceptarAgregarVacunaActionPerformed

    private void buttonCargarVacunasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCargarVacunasActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivo de Texto", "txt");
        chooser.setFileFilter(filter);
        int returnVal = chooser.showOpenDialog(this);
        if(returnVal == JFileChooser.APPROVE_OPTION) {
            selectedChild.cargarArchivo(chooser.getSelectedFile().getAbsolutePath());
            this.cargarVacunasHijo();
        }
    }//GEN-LAST:event_buttonCargarVacunasActionPerformed

    private void listaVacunasValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listaVacunasValueChanged
        //This line prevents double events
        if (!evt.getValueIsAdjusting()) {
        }
        else{
            //Obtengo lugar en el ArrayList de Vacunas
            int indexVacuna = listaVacunas.getSelectedIndex();
            //Setteo Fechas en TextFields
            if(selectedChild.getListVaccines().get(indexVacuna).getReceivedDate() != null){
                textVacunaFechaDada.setText(""+selectedChild.getListVaccines().get(indexVacuna).getReceivedDate());
            }
            else{
                textVacunaFechaDada.setText("No Dada");
            }
            if (!selectedChild.getListVaccines().get(indexVacuna).getExpirationMonths().isEmpty()) {
                textVacunaFechaExpira.setText(""+selectedChild.getListVaccines().get(indexVacuna).getExpirationMonths().get(0));
            }
            else{
                textVacunaFechaExpira.setText(""+selectedChild.getBirthDate());
            }
            //Obtengo si la vacuna es obligatoria y setteo el checkBox
            checkBoxVacunaObligatoria.setSelected(selectedChild.getListVaccines().get(indexVacuna).getMandatory());
        }
    }//GEN-LAST:event_listaVacunasValueChanged

    private void checkBoxVacunaObligatoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBoxVacunaObligatoriaActionPerformed
        // TODO add your handling code here:
        checkBoxVacunaObligatoria.setSelected(!checkBoxVacunaObligatoria.isSelected());
    }//GEN-LAST:event_checkBoxVacunaObligatoriaActionPerformed

    private void cargarHijoDelComboBox(){
        for (int i = 0; i < sistema.getListAllChildren().size(); i++) {
            Child h = sistema.getListAllChildren().get(i);
            if (comboBoxHijos.getModel().getSelectedItem().equals(h)) {
                selectedChild = h;
                textFechaNacimiento.setText(""+selectedChild.getBirthDate());
                this.cargarAppointmentDeHijo();
                this.cargarVacunasHijo();
                this.updateChart();
                this.notificar();
            }
        } 
    }
    
    private void cargarVacunasHijo(){
        if (selectedChild != null) {               
            listaVacunas.setListData(selectedChild.getListVaccines().toArray());
            comboBoxVacunaDada.setModel(new DefaultComboBoxModel(selectedChild.getListVaccines().toArray()));
        }
    }
    
    private void cargarAppointmentDeHijo(){
        consultasProximas = new ArrayList<Appointment>();
        consultasAnteriores = new ArrayList<Appointment>();
        if (selectedChild != null) {
            for (int i = 0; i < selectedChild.getListAppointments().size(); i++) {
                if (selectedChild.getListAppointments().get(i).getAppointmentDate().isAfter(LocalDate.now())) {
                    consultasProximas.add(selectedChild.getListAppointments().get(i));
                }
                else{
                    consultasAnteriores.add(selectedChild.getListAppointments().get(i));
                }
            }
            listaFechaConsultasAnteriores.setListData(consultasAnteriores.toArray());
            listaFechaProximasConsultas.setListData(consultasProximas.toArray());
        }
    } 
    
    private void notificar(){
        vNotificaciones notification = new vNotificaciones(sistema, selectedChild);
        notification.setVisible(true);
    }
    
    private void updateChart() {
        //Estatura
        XYDataset datasetEstatura = createXYdatasetEstatura();
        JFreeChart chartEstatura = createChart("ESTATURA", "Edad (en meses cumplidos)", "Estatura(cm)", datasetEstatura, 45, 125);
        BufferedImage imageEstatura = chartEstatura.createBufferedImage(364, 251);
        graficaEstatura.setIcon(new ImageIcon(imageEstatura));  
        //Peso
        XYDataset datasetPeso = createXYdatasetPeso();       
        JFreeChart chartPeso = createChart("PESO", "Edad (en meses cumplidos)", "Peso(kg)", datasetPeso, 0, 27);
        BufferedImage imagePeso = chartPeso.createBufferedImage(364, 251);
        graficaPeso.setIcon(new ImageIcon(imagePeso)); 
        //Perimetro Craneal
        XYDataset datasetPerimetro = createXYdatasetPerimetro();       
        JFreeChart chartPerimetro = createChart("PERIMETRO CRANEAL", "Edad (en meses cumplidos)", "Perimetro Craneal(cm)", datasetPerimetro, 32, 56);
        BufferedImage imagePerimetro = chartPerimetro.createBufferedImage(364, 251);
        graficaPerimetro.setIcon(new ImageIcon(imagePerimetro)); 
    }
    
    private XYDataset createXYdatasetEstatura() {
        XYSeries childData = new XYSeries("childHeightData");
        if (selectedChild != null) {
            for (int i = 0; i < selectedChild.getListGrowth().size(); i++) {
                int ageInMonths = (selectedChild.getBirthDate().getYear() * 12) + selectedChild.getBirthDate().getMonthValue();
                int dateInMonths = (selectedChild.getListGrowth().get(i).getDate().getYear() * 12) + selectedChild.getListGrowth().get(i).getDate().getMonthValue();
                childData.add((dateInMonths - ageInMonths), selectedChild.getListGrowth().get(i).getHeight());
            }
        }
        XYSeries high = new XYSeries("childHeightHigh");
        high.add(0,56);
        high.add(1,61);
        high.add(2,64);
        high.add(3,68);
        high.add(4,70);
        high.add(5,72);
        high.add(6,74);
        high.add(7,76);
        high.add(8,77);
        high.add(9,79);
        high.add(10,80);
        high.add(11,82);
        high.add(12,83);
        high.add(13,84);
        high.add(14,86);
        high.add(15,87);
        high.add(16,88);
        high.add(17,89);
        high.add(18,90);
        high.add(19,92);
        high.add(20,93);
        high.add(21,94);
        high.add(22,95);
        high.add(23,96);
        high.add(24,97);
        high.add(25,97);
        high.add(26,98);
        high.add(27,99);
        high.add(28,100);
        high.add(29,101);
        high.add(30,102);
        high.add(31,103);
        high.add(32,104);
        high.add(33,105);
        high.add(34,106);
        high.add(35,106);
        high.add(36,107);
        high.add(37,108);
        high.add(38,109);
        high.add(39,110);
        high.add(40,110);
        high.add(41,111);
        high.add(42,112);
        high.add(43,113);
        high.add(44,113);
        high.add(45,114);
        high.add(46,115);
        high.add(47,115);
        high.add(48,116);
        high.add(49,117);
        high.add(50,117);
        high.add(51,118);
        high.add(52,119);
        high.add(53,119);
        high.add(54,120);
        high.add(55,121);
        high.add(56,121);
        high.add(57,122);
        high.add(58,123);
        high.add(59,123);
        high.add(60,124);

        XYSeries midHigh = new XYSeries("childHeightMidHigh");
        midHigh.add(0,52);
        midHigh.add(1,57);
        midHigh.add(2,60);
        midHigh.add(3,64);
        midHigh.add(4,66);
        midHigh.add(5,68);
        midHigh.add(6,70);
        midHigh.add(7,71);
        midHigh.add(8,73);
        midHigh.add(9,74);
        midHigh.add(10,76);
        midHigh.add(11,77);
        midHigh.add(12,78);
        midHigh.add(13,79);
        midHigh.add(14,80);
        midHigh.add(15,82);
        midHigh.add(16,83);
        midHigh.add(17,84);
        midHigh.add(18,85);
        midHigh.add(19,86);
        midHigh.add(20,87);
        midHigh.add(21,88);
        midHigh.add(22,89);
        midHigh.add(23,90);
        midHigh.add(24,91);
        midHigh.add(25,91);
        midHigh.add(26,92);
        midHigh.add(27,93);
        midHigh.add(28,94);
        midHigh.add(29,95);
        midHigh.add(30,95);
        midHigh.add(31,96);
        midHigh.add(32,97);
        midHigh.add(33,98);
        midHigh.add(34,98);
        midHigh.add(35,99);
        midHigh.add(36,100);
        midHigh.add(37,101);
        midHigh.add(38,101);
        midHigh.add(39,102);
        midHigh.add(40,103);
        midHigh.add(41,103);
        midHigh.add(42,104);
        midHigh.add(43,105);
        midHigh.add(44,105);
        midHigh.add(45,106);
        midHigh.add(46,106);
        midHigh.add(47,107);
        midHigh.add(48,108);
        midHigh.add(49,108);
        midHigh.add(50,109);
        midHigh.add(51,109);
        midHigh.add(52,110);
        midHigh.add(53,111);
        midHigh.add(54,111);
        midHigh.add(55,112);
        midHigh.add(56,112);
        midHigh.add(57,113);
        midHigh.add(58,113);
        midHigh.add(59,114);
        midHigh.add(60,115);
        
        XYSeries median = new XYSeries("childHeightMedian");       
        median.add(0,50);
        median.add(1,55);
        median.add(2,58);
        median.add(3,61);
        median.add(4,64);
        median.add(5,66);
        median.add(6,68);
        median.add(7,69);
        median.add(8,71);
        median.add(9,72);
        median.add(10,73);
        median.add(11,75);
        median.add(12,76);
        median.add(13,77);
        median.add(14,78);
        median.add(15,79);
        median.add(16,80);
        median.add(17,81);
        median.add(18,82);
        median.add(19,83);
        median.add(20,84);
        median.add(21,85);
        median.add(22,86);
        median.add(23,87);
        median.add(24,87);
        median.add(25,88);
        median.add(26,89);
        median.add(27,90);
        median.add(28,90);
        median.add(29,91);
        median.add(30,92);
        median.add(31,93);
        median.add(32,93);
        median.add(33,94);
        median.add(34,95);
        median.add(35,95);
        median.add(36,96);
        median.add(37,97);
        median.add(38,97);
        median.add(39,98);
        median.add(40,99);
        median.add(41,99);
        median.add(42,100);
        median.add(43,100);
        median.add(44,101);
        median.add(45,102);
        median.add(46,102);
        median.add(47,103);
        median.add(48,103);
        median.add(49,104);
        median.add(50,105);
        median.add(51,106);
        median.add(52,106);
        median.add(53,106);
        median.add(54,107);
        median.add(55,107);
        median.add(56,108);
        median.add(57,108);
        median.add(58,109);
        median.add(59,109);
        median.add(60,110);
        
        XYSeries midLow = new XYSeries("childHeightMidLow");
        midLow.add(0,48);
        midLow.add(1,53);
        midLow.add(2,56);
        midLow.add(3,59);
        midLow.add(4,62);
        midLow.add(5,64);
        midLow.add(6,66);
        midLow.add(7,67);
        midLow.add(8,68);
        midLow.add(9,70);
        midLow.add(10,71);
        midLow.add(11,72);
        midLow.add(12,73);
        midLow.add(13,75);
        midLow.add(14,76);
        midLow.add(15,77);
        midLow.add(16,78);
        midLow.add(17,79);
        midLow.add(18,80);
        midLow.add(19,81);
        midLow.add(20,81);
        midLow.add(21,82);
        midLow.add(22,83);
        midLow.add(23,84);
        midLow.add(24,85);
        midLow.add(25,85);
        midLow.add(26,86);
        midLow.add(27,86);
        midLow.add(28,87);
        midLow.add(29,88);
        midLow.add(30,89);
        midLow.add(31,89);
        midLow.add(32,90);
        midLow.add(33,91);
        midLow.add(34,91);
        midLow.add(35,92);
        midLow.add(36,92);
        midLow.add(37,93);
        midLow.add(38,94);
        midLow.add(39,94);
        midLow.add(40,95);
        midLow.add(41,95);
        midLow.add(42,96);
        midLow.add(43,96);
        midLow.add(44,97);
        midLow.add(45,98);
        midLow.add(46,98);
        midLow.add(47,99);
        midLow.add(48,99);
        midLow.add(49,100);
        midLow.add(50,100);
        midLow.add(51,101);
        midLow.add(52,101);
        midLow.add(53,102);
        midLow.add(54,102);
        midLow.add(55,103);
        midLow.add(56,103);
        midLow.add(57,104);
        midLow.add(58,104);
        midLow.add(59,105);
        midLow.add(60,105);
    
        XYSeries low = new XYSeries("childHeightLow");
        low.add(0,44);
        low.add(1,49);
        low.add(2,52);
        low.add(3,55);
        low.add(4,58);
        low.add(5,60);
        low.add(6,61);
        low.add(7,63);
        low.add(8,64);
        low.add(9,65);
        low.add(10,66);
        low.add(11,68);
        low.add(12,69);
        low.add(13,70);
        low.add(14,71);
        low.add(15,72);
        low.add(16,73);
        low.add(17,73);
        low.add(18,74);
        low.add(19,75);
        low.add(20,76);
        low.add(21,77);
        low.add(22,77);
        low.add(23,78);
        low.add(24,79);
        low.add(25,79);
        low.add(26,79);
        low.add(27,80);
        low.add(28,81);
        low.add(29,81);
        low.add(30,82);
        low.add(31,82);
        low.add(32,83);
        low.add(33,83);
        low.add(34,84);
        low.add(35,84);
        low.add(36,85);
        low.add(37,86);
        low.add(38,86);
        low.add(39,87);
        low.add(40,87);
        low.add(41,88);
        low.add(42,88);
        low.add(43,88);
        low.add(44,89);
        low.add(45,89);
        low.add(46,90);
        low.add(47,90);
        low.add(48,91);
        low.add(49,91);
        low.add(50,92);
        low.add(51,92);
        low.add(52,93);
        low.add(53,93);
        low.add(54,93);
        low.add(55,94);
        low.add(56,94);
        low.add(57,95);
        low.add(58,95);
        low.add(59,96);
        low.add(60,96);

        XYSeriesCollection dataset = new XYSeriesCollection();
        dataset.addSeries(childData);
        dataset.addSeries(high);
        dataset.addSeries(midHigh);
        dataset.addSeries(median);
        dataset.addSeries(midLow);
        dataset.addSeries(low);
        
        return dataset;
    }
    
    private XYDataset createXYdatasetPeso() {
        XYSeries childData = new XYSeries("childWeightData");
        if (selectedChild != null) {
            for (int i = 0; i < selectedChild.getListGrowth().size(); i++) {
                int ageInMonths = (selectedChild.getBirthDate().getYear() * 12) + selectedChild.getBirthDate().getMonthValue();
                int dateInMonths = (selectedChild.getListGrowth().get(i).getDate().getYear() * 12) + selectedChild.getListGrowth().get(i).getDate().getMonthValue();
                childData.add((dateInMonths - ageInMonths), selectedChild.getListGrowth().get(i).getWeight());
            }
        }   
        XYSeries high = new XYSeries("childWeightHigh");
        high.add(0,5);
        high.add(1,7);
        high.add(2,8);
        high.add(3,9);
        high.add(4,10);
        high.add(5,10);
        high.add(6,11);
        high.add(7,11);
        high.add(8,12);
        high.add(9,12);
        high.add(10,13);
        high.add(11,13);
        high.add(12,13);
        high.add(13,14);
        high.add(14,14);
        high.add(15,14);
        high.add(16,15);
        high.add(17,15);
        high.add(18,15);
        high.add(19,16);
        high.add(20,16);
        high.add(21,16);
        high.add(22,17);
        high.add(23,17);
        high.add(24,17);
        high.add(25,18);
        high.add(26,18);
        high.add(27,18);
        high.add(28,18);
        high.add(29,19);
        high.add(30,19);
        high.add(31,19);
        high.add(32,20);
        high.add(33,20);
        high.add(34,20);
        high.add(35,20);
        high.add(36,21);
        high.add(37,21);
        high.add(38,21);
        high.add(39,22);
        high.add(40,22);
        high.add(41,22);
        high.add(42,22);
        high.add(43,23);
        high.add(44,23);
        high.add(45,23);
        high.add(46,24);
        high.add(47,24);
        high.add(48,24);
        high.add(49,25);
        high.add(50,25);
        high.add(51,25);
        high.add(52,25);
        high.add(53,26);
        high.add(54,26);
        high.add(55,26);
        high.add(56,27);
        high.add(57,27);
        high.add(58,28);
        high.add(59,28);
        high.add(60,28);

        XYSeries midHigh = new XYSeries("childWeightMidHigh");
        midHigh.add(0,4);
        midHigh.add(1,5);
        midHigh.add(2,6);
        midHigh.add(3,7);
        midHigh.add(4,8);
        midHigh.add(5,8);
        midHigh.add(6,9);
        midHigh.add(7,9);
        midHigh.add(8,10);
        midHigh.add(9,10);
        midHigh.add(10,10);
        midHigh.add(11,11);
        midHigh.add(12,11);
        midHigh.add(13,11);
        midHigh.add(14,11);
        midHigh.add(15,12);
        midHigh.add(16,12);
        midHigh.add(17,12);
        midHigh.add(18,12);
        midHigh.add(19,13);
        midHigh.add(20,13);
        midHigh.add(21,13);
        midHigh.add(22,13);
        midHigh.add(23,13);
        midHigh.add(24,14);
        midHigh.add(25,14);
        midHigh.add(26,14);
        midHigh.add(27,14);
        midHigh.add(28,15);
        midHigh.add(29,15);
        midHigh.add(30,15);
        midHigh.add(31,15);
        midHigh.add(32,15);
        midHigh.add(33,16);
        midHigh.add(34,16);
        midHigh.add(35,16);
        midHigh.add(36,16);
        midHigh.add(37,16);
        midHigh.add(38,16);
        midHigh.add(39,17);
        midHigh.add(40,17);
        midHigh.add(41,17);
        midHigh.add(42,17);
        midHigh.add(43,17);
        midHigh.add(44,18);
        midHigh.add(45,18);
        midHigh.add(46,18);
        midHigh.add(47,18);
        midHigh.add(48,19);
        midHigh.add(49,19);
        midHigh.add(50,19);
        midHigh.add(51,19);
        midHigh.add(52,19);
        midHigh.add(53,20);
        midHigh.add(54,20);
        midHigh.add(55,20);
        midHigh.add(56,20);
        midHigh.add(57,20);
        midHigh.add(58,21);
        midHigh.add(59,21);
        midHigh.add(60,21);

        XYSeries median = new XYSeries("childWeightMedian");              
        median.add(0,3);
        median.add(1,5);
        median.add(2,6);
        median.add(3,6);
        median.add(4,7);
        median.add(5,8);
        median.add(6,8);
        median.add(7,8);
        median.add(8,9);
        median.add(9,9);
        median.add(10,9);
        median.add(11,9);
        median.add(12,10);
        median.add(13,10);
        median.add(14,10);
        median.add(15,10);
        median.add(16,11);
        median.add(17,11);
        median.add(18,11);
        median.add(19,11);
        median.add(20,11);
        median.add(21,12);
        median.add(22,12);
        median.add(23,12);
        median.add(24,12);
        median.add(25,12);
        median.add(26,13);
        median.add(27,13);
        median.add(28,13);
        median.add(29,13);
        median.add(30,13);
        median.add(31,14);
        median.add(32,14);
        median.add(33,14);
        median.add(34,14);
        median.add(35,14);
        median.add(36,14);
        median.add(37,15);
        median.add(38,15);
        median.add(39,15);
        median.add(40,15);
        median.add(41,15);
        median.add(42,15);
        median.add(43,16);
        median.add(44,16);
        median.add(45,16);
        median.add(46,16);
        median.add(47,16);
        median.add(48,16);
        median.add(49,17);
        median.add(50,17);
        median.add(51,17);
        median.add(52,17);
        median.add(53,17);
        median.add(54,17);
        median.add(55,18);
        median.add(56,18);
        median.add(57,18);
        median.add(58,18);
        median.add(59,18);
        median.add(60,18);

        XYSeries midLow = new XYSeries("childWeightMidLow");
        midLow.add(0,3);
        midLow.add(1,4);
        midLow.add(2,5);
        midLow.add(3,6);
        midLow.add(4,6);
        midLow.add(5,7);
        midLow.add(6,7);
        midLow.add(7,7);
        midLow.add(8,8);
        midLow.add(9,8);
        midLow.add(10,8);
        midLow.add(11,8);
        midLow.add(12,9);
        midLow.add(13,9);
        midLow.add(14,9);
        midLow.add(15,9);
        midLow.add(16,9);
        midLow.add(17,10);
        midLow.add(18,10);
        midLow.add(19,10);
        midLow.add(20,10);
        midLow.add(21,10);
        midLow.add(22,11);
        midLow.add(23,11);
        midLow.add(24,11);
        midLow.add(25,11);
        midLow.add(26,11);
        midLow.add(27,11);
        midLow.add(28,12);
        midLow.add(29,12);
        midLow.add(30,12);
        midLow.add(31,12);
        midLow.add(32,12);
        midLow.add(33,12);
        midLow.add(34,12);
        midLow.add(35,13);
        midLow.add(36,13);
        midLow.add(37,13);
        midLow.add(38,13);
        midLow.add(39,13);
        midLow.add(40,13);
        midLow.add(41,13);
        midLow.add(42,14);
        midLow.add(43,14);
        midLow.add(44,14);
        midLow.add(45,14);
        midLow.add(46,14);
        midLow.add(47,14);
        midLow.add(48,14);
        midLow.add(49,15);
        midLow.add(50,15);
        midLow.add(51,15);
        midLow.add(52,15);
        midLow.add(53,15);
        midLow.add(54,15);
        midLow.add(55,15);
        midLow.add(56,16);
        midLow.add(57,16);
        midLow.add(58,16);
        midLow.add(59,16);
        midLow.add(60,16);

        XYSeries low = new XYSeries("childWeightLow");
        low.add(0,2);
        low.add(1,3);
        low.add(2,4);
        low.add(3,4);
        low.add(4,5);
        low.add(5,5);
        low.add(6,6);
        low.add(7,6);
        low.add(8,6);
        low.add(9,6);
        low.add(10,7);
        low.add(11,7);
        low.add(12,7);
        low.add(13,7);
        low.add(14,7);
        low.add(15,7);
        low.add(16,8);
        low.add(17,8);
        low.add(18,8);
        low.add(19,8);
        low.add(20,8);
        low.add(21,8);
        low.add(22,8);
        low.add(23,9);
        low.add(24,9);
        low.add(25,9);
        low.add(26,9);
        low.add(27,9);
        low.add(28,9);
        low.add(29,9);
        low.add(30,9);
        low.add(31,10);
        low.add(32,10);
        low.add(33,10);
        low.add(34,10);
        low.add(35,10);
        low.add(36,10);
        low.add(37,10);
        low.add(38,10);
        low.add(39,10);
        low.add(40,10);
        low.add(41,11);
        low.add(42,11);
        low.add(43,11);
        low.add(44,11);
        low.add(45,11);
        low.add(46,11);
        low.add(47,11);
        low.add(48,11);
        low.add(49,11);
        low.add(50,11);
        low.add(51,12);
        low.add(52,12);
        low.add(53,12);
        low.add(54,12);
        low.add(55,12);
        low.add(56,12);
        low.add(57,12);
        low.add(58,12);
        low.add(59,12);
        low.add(60,12);

        XYSeriesCollection dataset = new XYSeriesCollection();
        dataset.addSeries(childData);
        dataset.addSeries(high);
        dataset.addSeries(midHigh);
        dataset.addSeries(median);
        dataset.addSeries(midLow);
        dataset.addSeries(low);
        
        return dataset;
    }
       
    private XYDataset createXYdatasetPerimetro() {
        XYSeries childData = new XYSeries("childPerimeterData");
        if (selectedChild != null) {
            for (int i = 0; i < selectedChild.getListGrowth().size(); i++) {
                int ageInMonths = (selectedChild.getBirthDate().getYear() * 12) + selectedChild.getBirthDate().getMonthValue();
                int dateInMonths = (selectedChild.getListGrowth().get(i).getDate().getYear() * 12) + selectedChild.getListGrowth().get(i).getDate().getMonthValue();
                childData.add((dateInMonths - ageInMonths), selectedChild.getListGrowth().get(i).getCranialPerimeter());
            }
        }   
        XYSeries high = new XYSeries("childPerimeteHigh");
        high.add(0,38);
        high.add(1,41);
        high.add(2,43);
        high.add(3,44);
        high.add(4,45);
        high.add(5,46);
        high.add(6,47);
        high.add(7,48);
        high.add(8,48);
        high.add(9,49);
        high.add(10,49);
        high.add(11,50);
        high.add(12,50);
        high.add(13,50);
        high.add(14,51);
        high.add(15,51);
        high.add(16,51);
        high.add(17,51);
        high.add(18,51);
        high.add(19,52);
        high.add(20,52);
        high.add(21,52);
        high.add(22,52);
        high.add(23,52);
        high.add(24,52);
        high.add(25,53);
        high.add(26,53);
        high.add(27,53);
        high.add(28,53);
        high.add(29,53);
        high.add(30,53);
        high.add(31,53);
        high.add(32,53);
        high.add(33,53);
        high.add(34,54);
        high.add(35,54);
        high.add(36,54);
        high.add(37,54);
        high.add(38,54);
        high.add(39,54);
        high.add(40,54);
        high.add(41,54);
        high.add(42,54);
        high.add(43,54);
        high.add(44,54);
        high.add(45,54);
        high.add(46,55);
        high.add(47,55);
        high.add(48,55);
        high.add(49,55);
        high.add(50,55);
        high.add(51,55);
        high.add(52,55);
        high.add(53,55);
        high.add(54,55);
        high.add(55,55);
        high.add(56,55);
        high.add(57,55);
        high.add(58,55);
        high.add(59,55);
        high.add(60,55);

        XYSeries midHigh = new XYSeries("childPerimeteMidHigh");
        midHigh.add(0,36);
        midHigh.add(1,38);
        midHigh.add(2,40);
        midHigh.add(3,42);
        midHigh.add(4,43);
        midHigh.add(5,44);
        midHigh.add(6,45);
        midHigh.add(7,45);
        midHigh.add(8,46);
        midHigh.add(9,46);
        midHigh.add(10,47);
        midHigh.add(11,47);
        midHigh.add(12,47);
        midHigh.add(13,48);
        midHigh.add(14,48);
        midHigh.add(15,48);
        midHigh.add(16,48);
        midHigh.add(17,49);
        midHigh.add(18,49);
        midHigh.add(19,49);
        midHigh.add(20,49);
        midHigh.add(21,49);
        midHigh.add(22,49);
        midHigh.add(23,50);
        midHigh.add(24,50);
        midHigh.add(25,50);
        midHigh.add(26,50);
        midHigh.add(27,50);
        midHigh.add(28,50);
        midHigh.add(29,50);
        midHigh.add(30,50);
        midHigh.add(31,50);
        midHigh.add(32,51);
        midHigh.add(33,51);
        midHigh.add(34,51);
        midHigh.add(35,51);
        midHigh.add(36,51);
        midHigh.add(37,51);
        midHigh.add(38,51);
        midHigh.add(39,51);
        midHigh.add(40,51);
        midHigh.add(41,51);
        midHigh.add(42,51);
        midHigh.add(43,51);
        midHigh.add(44,51);
        midHigh.add(45,52);
        midHigh.add(46,52);
        midHigh.add(47,52);
        midHigh.add(48,52);
        midHigh.add(49,52);
        midHigh.add(50,52);
        midHigh.add(51,52);
        midHigh.add(52,52);
        midHigh.add(53,52);
        midHigh.add(54,52);
        midHigh.add(55,52);
        midHigh.add(56,52);
        midHigh.add(57,52);
        midHigh.add(58,52);
        midHigh.add(59,52);
        midHigh.add(60,52);

        XYSeries median = new XYSeries("childPerimetetMedian");       
        median.add(0,35);
        median.add(1,38);
        median.add(2,39);
        median.add(3,41);
        median.add(4,42);
        median.add(5,43);
        median.add(6,43);
        median.add(7,44);
        median.add(8,45);
        median.add(9,45);
        median.add(10,45);
        median.add(11,46);
        median.add(12,46);
        median.add(13,46);
        median.add(14,47);
        median.add(15,47);
        median.add(16,47);
        median.add(17,47);
        median.add(18,47);
        median.add(19,48);
        median.add(20,48);
        median.add(21,48);
        median.add(22,48);
        median.add(23,48);
        median.add(24,48);
        median.add(25,48);
        median.add(26,49);
        median.add(27,49);
        median.add(28,49);
        median.add(29,49);
        median.add(30,49);
        median.add(31,49);
        median.add(32,49);
        median.add(33,49);
        median.add(34,49);
        median.add(35,49);
        median.add(36,50);
        median.add(37,50);
        median.add(38,50);
        median.add(39,50);
        median.add(40,50);
        median.add(41,50);
        median.add(42,50);
        median.add(43,50);
        median.add(44,50);
        median.add(45,50);
        median.add(46,50);
        median.add(47,50);
        median.add(48,50);
        median.add(49,50);
        median.add(50,50);
        median.add(51,50);
        median.add(52,50);
        median.add(53,50);
        median.add(54,51);
        median.add(55,51);
        median.add(56,51);
        median.add(57,51);
        median.add(58,51);
        median.add(59,51);
        median.add(60,51);

        XYSeries midLow = new XYSeries("childPerimeteMidLow");
        midLow.add(0,33);
        midLow.add(1,36);
        midLow.add(2,38);
        midLow.add(3,39);
        midLow.add(4,40);
        midLow.add(5,41);
        midLow.add(6,42);
        midLow.add(7,43);
        midLow.add(8,43);
        midLow.add(9,44);
        midLow.add(10,44);
        midLow.add(11,45);
        midLow.add(12,45);
        midLow.add(13,45);
        midLow.add(14,45);
        midLow.add(15,46);
        midLow.add(16,46);
        midLow.add(17,46);
        midLow.add(18,46);
        midLow.add(19,46);
        midLow.add(20,46);
        midLow.add(21,47);
        midLow.add(22,47);
        midLow.add(23,47);
        midLow.add(24,47);
        midLow.add(25,47);
        midLow.add(26,47);
        midLow.add(27,47);
        midLow.add(28,47);
        midLow.add(29,47);
        midLow.add(30,48);
        midLow.add(31,48);
        midLow.add(32,48);
        midLow.add(33,48);
        midLow.add(34,48);
        midLow.add(35,48);
        midLow.add(36,48);
        midLow.add(37,48);
        midLow.add(38,48);
        midLow.add(39,48);
        midLow.add(40,48);
        midLow.add(41,48);
        midLow.add(42,48);
        midLow.add(43,49);
        midLow.add(44,49);
        midLow.add(45,49);
        midLow.add(46,49);
        midLow.add(47,49);
        midLow.add(48,49);
        midLow.add(49,49);
        midLow.add(50,49);
        midLow.add(51,49);
        midLow.add(52,49);
        midLow.add(53,49);
        midLow.add(54,49);
        midLow.add(55,49);
        midLow.add(56,49);
        midLow.add(57,49);
        midLow.add(58,49);
        midLow.add(59,49);
        midLow.add(60,49);
        
        XYSeries low = new XYSeries("childPerimeteLow");
        low.add(0,31);
        low.add(1,34);
        low.add(2,36);
        low.add(3,37);
        low.add(4,38);
        low.add(5,39);
        low.add(6,40);
        low.add(7,40);
        low.add(8,41);
        low.add(9,41);
        low.add(10,42);
        low.add(11,42);
        low.add(12,42);
        low.add(13,43);
        low.add(14,43);
        low.add(15,43);
        low.add(16,43);
        low.add(17,43);
        low.add(18,43);
        low.add(19,44);
        low.add(20,44);
        low.add(21,44);
        low.add(22,44);
        low.add(23,44);
        low.add(24,44);
        low.add(25,44);
        low.add(26,44);
        low.add(27,45);
        low.add(28,45);
        low.add(29,45);
        low.add(30,45);
        low.add(31,45);
        low.add(32,45);
        low.add(33,45);
        low.add(34,45);
        low.add(35,45);
        low.add(36,45);
        low.add(37,45);
        low.add(38,45);
        low.add(39,45);
        low.add(40,46);
        low.add(41,46);
        low.add(42,46);
        low.add(43,46);
        low.add(44,46);
        low.add(45,46);
        low.add(46,46);
        low.add(47,46);
        low.add(48,46);
        low.add(49,46);
        low.add(50,46);
        low.add(51,46);
        low.add(52,46);
        low.add(53,46);
        low.add(54,46);
        low.add(55,46);
        low.add(56,46);
        low.add(57,46);
        low.add(58,46);
        low.add(59,46);
        low.add(60,46);

        XYSeriesCollection dataset = new XYSeriesCollection();
        dataset.addSeries(childData);
        dataset.addSeries(high);
        dataset.addSeries(midHigh);
        dataset.addSeries(median);
        dataset.addSeries(midLow);
        dataset.addSeries(low);
        
        return dataset;
    }
    
    private JFreeChart createChart(String title, String xAxis, String yAxis, XYDataset dataset, int minY, int maxY) {
        JFreeChart chart = ChartFactory.createXYLineChart(
            title,      // chart title
            xAxis,                      // x axis label
            yAxis,                      // y axis label
            dataset,                  // data
            PlotOrientation.VERTICAL,
            false,                     // include legend
            true,                     // tooltips
            false                     // urls
        );
        XYPlot plot = (XYPlot) chart.getPlot();
        plot.setRangeGridlinesVisible(true);
        plot.setBackgroundAlpha(0.5f);
        plot.getDomainAxis().setRange(0, 60);
        plot.getRangeAxis().setRange(minY, maxY);
        plot.getRenderer().setSeriesPaint(0, Color.BLUE);
        plot.getRenderer().setSeriesPaint(1, Color.RED);
        plot.getRenderer().setSeriesPaint(2, Color.YELLOW);
        plot.getRenderer().setSeriesPaint(3, Color.GREEN);
        plot.getRenderer().setSeriesPaint(4, Color.YELLOW);
        plot.getRenderer().setSeriesPaint(5, Color.RED);
        return chart;
    }
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAceptarAgregarConsulta;
    private javax.swing.JButton buttonAceptarAgregarHijo;
    private javax.swing.JButton buttonAceptarAgregarVacuna;
    private javax.swing.JButton buttonCancelarAgregarConsulta;
    private javax.swing.JButton buttonCancelarAgregarHijo;
    private javax.swing.JButton buttonCancelarAgregarVacuna;
    private javax.swing.JButton buttonCargarVacunas;
    private javax.swing.JCheckBox checkBoxRealizadaConsultasAnteriores;
    private javax.swing.JCheckBox checkBoxRealizadaProximasConsultas;
    private javax.swing.JCheckBox checkBoxRevisadoAgregarConsulta;
    private javax.swing.JCheckBox checkBoxVacunaObligatoria;
    private javax.swing.JComboBox comboBoxHijos;
    private javax.swing.JComboBox comboBoxVacunaDada;
    private org.jdesktop.swingx.JXDatePicker datePickerAgregarConsulta;
    private org.jdesktop.swingx.JXDatePicker datePickerAgregarCrecimiento;
    private org.jdesktop.swingx.JXDatePicker datePickerAgregarVacunaFecha;
    private org.jdesktop.swingx.JXDatePicker datePickerFechaNacimientoAgregarHijo;
    private javax.swing.JLabel graficaEstatura;
    private javax.swing.JLabel graficaPerimetro;
    private javax.swing.JLabel graficaPeso;
    private javax.swing.JButton jButtonAceptIngresoDeCrecimiento;
    private javax.swing.JButton jButtonCanelarRegistroCrecimiento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabelErrAlt;
    private javax.swing.JLabel jLabelErrPermie;
    private javax.swing.JLabel jLabelErrPeso;
    private javax.swing.JLabel jLabelTit;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextFieldAltura;
    private javax.swing.JTextField jTextFieldPerimetro;
    private javax.swing.JTextField jTextFieldPeso;
    private javax.swing.JLabel labelFechaAgregarConsulta;
    private javax.swing.JLabel labelFechaAgregarCrecimiento;
    private javax.swing.JLabel labelFechaConsultasAnteriores;
    private javax.swing.JLabel labelFechaNacimiento;
    private javax.swing.JLabel labelFechaNacimientoAgregarHijo;
    private javax.swing.JLabel labelFechaProximasConsultas;
    private javax.swing.JLabel labelNombre;
    private javax.swing.JLabel labelNombreAgregarHijo;
    private javax.swing.JLabel labelNotaAgregarConsulta;
    private javax.swing.JLabel labelNotaConsultasAnteriores;
    private javax.swing.JLabel labelNotaProximasConsultas;
    private javax.swing.JList listaFechaConsultasAnteriores;
    private javax.swing.JList listaFechaProximasConsultas;
    private javax.swing.JList listaVacunas;
    private javax.swing.JTextArea notaProximasConsultas;
    private javax.swing.JScrollPane paneAgregarNota;
    private javax.swing.JScrollPane paneFechaConsultasAnteriores;
    private javax.swing.JScrollPane paneFechaProximasConsultas;
    private javax.swing.JScrollPane paneNotaConsultasAnteriores;
    private javax.swing.JScrollPane paneNotaProximasConsultas;
    private javax.swing.JPanel panelHijos;
    private javax.swing.JPanel panelVacunas;
    private javax.swing.JPanel tabAgenda;
    private javax.swing.JPanel tabCrecimiento;
    private javax.swing.JPanel tabHijosYVacunas;
    private javax.swing.JTabbedPane tabbedPane;
    private javax.swing.JTextArea textAgregarNota;
    private javax.swing.JLabel textErrorFechaAgregarConsulta;
    private javax.swing.JLabel textErrorFechaAgregarCrecimiento;
    private javax.swing.JLabel textErrorFechaNacimientoAgregarHijo;
    private javax.swing.JLabel textErrorNoChild;
    private javax.swing.JLabel textErrorNombreAgregarHijo;
    private javax.swing.JTextField textFechaNacimiento;
    private javax.swing.JTextField textNombreAgregarHijo;
    private javax.swing.JTextArea textNotaConsultasAnteriores;
    private javax.swing.JTextField textVacunaFechaDada;
    private javax.swing.JTextField textVacunaFechaExpira;
    private javax.swing.JLabel tituloAgregarConsulta;
    private javax.swing.JLabel tituloAgregarHijo;
    private javax.swing.JLabel tituloAgregarVacuna;
    private javax.swing.JLabel tituloAgregarVacunaDada;
    private javax.swing.JLabel tituloCargarVacunas;
    private javax.swing.JLabel tituloConsultasAnteriores;
    private javax.swing.JLabel tituloFechaVacunaDada;
    private javax.swing.JLabel tituloHijosRegistrados;
    private javax.swing.JLabel tituloProximasConsultas;
    private javax.swing.JLabel tituloVacunaDada;
    private javax.swing.JLabel tituloVacunaExpira;
    private javax.swing.JLabel tituloVacunas;
    // End of variables declaration//GEN-END:variables
}

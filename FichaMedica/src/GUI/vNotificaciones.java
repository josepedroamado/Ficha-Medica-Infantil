package GUI;

import Logic.Appointment;
import Logic.Child;
import Logic.LogicSystem;
import Logic.Vaccine;
import java.time.LocalDate;
import java.time.Period;
import java.util.ArrayList;

public class vNotificaciones extends javax.swing.JFrame {

    LogicSystem sistema;
    Child selectedChild;
    ArrayList<Appointment> consultas;
    ArrayList<Vaccine> vacunas;
    public vNotificaciones(LogicSystem s, Child ch) {
        sistema = s;
        selectedChild = ch;
        initComponents();
        consultas = new ArrayList <Appointment>();
        vacunas = new ArrayList<Vaccine>();
        this.cargarConsultas();
        this.cargarVacunas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelNotificaciones = new javax.swing.JPanel();
        buttonAceptar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaConsultas = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        listaVacunas = new javax.swing.JList();
        tituloConsultas = new javax.swing.JLabel();
        textExpira = new javax.swing.JTextField();
        tituloExpira = new javax.swing.JLabel();
        tituloVacunas = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Notificaciones");
        setAlwaysOnTop(true);
        setResizable(false);

        panelNotificaciones.setBackground(new java.awt.Color(0, 153, 153));

        buttonAceptar.setBackground(new java.awt.Color(0, 102, 102));
        buttonAceptar.setForeground(new java.awt.Color(255, 255, 255));
        buttonAceptar.setText("Aceptar");
        buttonAceptar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        buttonAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAceptarActionPerformed(evt);
            }
        });

        listaConsultas.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        listaConsultas.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(listaConsultas);

        listaVacunas.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        listaVacunas.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        listaVacunas.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listaVacunasValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(listaVacunas);

        tituloConsultas.setBackground(new java.awt.Color(0, 102, 102));
        tituloConsultas.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        tituloConsultas.setForeground(new java.awt.Color(255, 255, 255));
        tituloConsultas.setText("CONSULTAS");

        textExpira.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N

        tituloExpira.setFont(new java.awt.Font("Segoe UI", 1, 11)); // NOI18N
        tituloExpira.setForeground(new java.awt.Color(255, 255, 255));
        tituloExpira.setText("Expira:");

        tituloVacunas.setBackground(new java.awt.Color(0, 102, 102));
        tituloVacunas.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        tituloVacunas.setForeground(new java.awt.Color(255, 255, 255));
        tituloVacunas.setText("VACUNAS");

        javax.swing.GroupLayout panelNotificacionesLayout = new javax.swing.GroupLayout(panelNotificaciones);
        panelNotificaciones.setLayout(panelNotificacionesLayout);
        panelNotificacionesLayout.setHorizontalGroup(
            panelNotificacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelNotificacionesLayout.createSequentialGroup()
                .addGap(104, 104, 104)
                .addComponent(buttonAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelNotificacionesLayout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(panelNotificacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(panelNotificacionesLayout.createSequentialGroup()
                        .addComponent(tituloExpira)
                        .addGap(28, 28, 28)
                        .addComponent(textExpira, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelNotificacionesLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(tituloConsultas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tituloVacunas)
                .addGap(64, 64, 64))
        );
        panelNotificacionesLayout.setVerticalGroup(
            panelNotificacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelNotificacionesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelNotificacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tituloVacunas)
                    .addComponent(tituloConsultas))
                .addGap(0, 0, 0)
                .addGroup(panelNotificacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelNotificacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textExpira, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tituloExpira))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelNotificaciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelNotificaciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAceptarActionPerformed
        dispose();
    }//GEN-LAST:event_buttonAceptarActionPerformed

    private void listaVacunasValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listaVacunasValueChanged
        //This line prevents double events
        if (!evt.getValueIsAdjusting()) {
        }     
        else{  
            //Obtengo lugar en el ArrayList de Vacunas
            int indexVacuna = listaVacunas.getSelectedIndex();
            //Setteo Fechas en TextFields
            
            if (!selectedChild.getListVaccines().get(indexVacuna).getExpirationMonths().isEmpty()) {
                textExpira.setText(""+selectedChild.getListVaccines().get(indexVacuna).getExpirationMonths().get(0));
            }
            else{
                textExpira.setText(""+selectedChild.getBirthDate());
            }
        }
    }//GEN-LAST:event_listaVacunasValueChanged

    private void cargarConsultas(){
        for (int i = 0; i < selectedChild.getListAppointments().size(); i++) {
            Appointment ap = selectedChild.getListAppointments().get(i);
            if (!ap.getAttended()) {
                if (ap.getAppointmentDate().isAfter(LocalDate.now())) {
                    if (ap.getAppointmentDate().isBefore(LocalDate.now().plus(Period.ofWeeks(2)))) {
                        consultas.add(ap);
                    }
                }
            }
        }
        listaConsultas.setListData(consultas.toArray());
    }
    
    private void cargarVacunas(){
        for (int i = 0; i < selectedChild.getListVaccines().size(); i++) {
            Vaccine vac = selectedChild.getListVaccines().get(i);
            if (vac.getExpirationMonths() != null) {
                if (!vac.getExpirationMonths().isEmpty()) {
                    if (vac.getExpirationMonths().get(0).isAfter(LocalDate.now())) {
                        if (vac.getExpirationMonths().get(0).isBefore(LocalDate.now().plus(Period.ofWeeks(2)))) {
                            vacunas.add(vac);  
                        }                               
                    }
                }
            }                     
        }
        listaVacunas.setListData(vacunas.toArray());
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAceptar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList listaConsultas;
    private javax.swing.JList listaVacunas;
    private javax.swing.JPanel panelNotificaciones;
    private javax.swing.JTextField textExpira;
    private javax.swing.JLabel tituloConsultas;
    private javax.swing.JLabel tituloExpira;
    private javax.swing.JLabel tituloVacunas;
    // End of variables declaration//GEN-END:variables
}
